/**********************************************
   DO NOT EDIT THIS FILE, IT WILL BE OVERRIDDEN
***********************************************/

import { Validation } from "yaschva"

export type ContractType<T, K> = {
  name: string
  authentication: boolean | string[] |
  {
    get: boolean | string[]
    modify: boolean | string[]
    delete?: boolean | string[]
  } |
  {
    get: boolean | string[]
    post: boolean | string[]
    put: boolean | string[]
    patch: boolean | string[]
    delete: boolean | string[]
  }
  type: "get" | "post" | "put" | "patch" | "delete"
  handle?: (input: T) => Promise<K>
  arguments: Validation
  returns: Validation
}


  /** MyMethod types for get method **/
export type MyMethodGetArgument = { name: string; multiType: string | { orObjectWIthAString: string }; dogs: "raining" | number; cats: { raining: boolean }[]; rain: "cats" | "dogs" }
export type MyMethodGetReturns = {  } | undefined

  export type ContractListType = {
MyMethodGet: ContractType<MyMethodGetArgument, MyMethodGetReturns>
}

  export const contracts: ContractListType = {
MyMethodGet: {
          name: "MyMethod",
          authentication: false,
          type: "get",
          handle: undefined,
          arguments: {"name":"string","multiType":["string",{"orObjectWIthAString":"string"}],"dogs":[{"$enum":["raining"]},"number"],"cats":{"$array":{"raining":"boolean"}},"rain":{"$enum":["cats","dogs"]}} ,
          returns: {}}
}
