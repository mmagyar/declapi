{"version":3,"file":"server.spec.js","sourceRoot":"","sources":["../../src/generate/server.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import server from './server.js'\nimport { OutputSuccess } from '../transform/types.js'\ndescribe('Generate typing and fetch function for server', () => {\n  const singleExample = (): OutputSuccess[] => [\n    {\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      method: 'GET',\n      arguments: {\n        myNumber: 'number'\n      },\n      returns: {}\n    }\n  ]\n\n  const crudExample = (): OutputSuccess[] => [\n    {\n      method: 'GET',\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      arguments: { search: ['string', '?'], id: ['string', { $array: 'string' }, '?'] },\n      returns: { $array: { id: 'string', myNumber: 'number' } }\n    },\n    {\n      method: 'POST',\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      arguments: { id: ['string', '?'], myNumber: 'number' },\n      returns: { id: 'string', myNumber: 'number' }\n    },\n    {\n      method: 'PUT',\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      arguments: { id: 'string', myNumber: 'number' },\n      returns: { id: 'string', myNumber: 'number' }\n    },\n    {\n      method: 'PATCH',\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      arguments: { id: 'string', myNumber: ['number', '?'] },\n      returns: { id: 'string', myNumber: 'number' }\n    },\n    {\n      method: 'DELETE',\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      arguments: { id: ['string', { $array: 'string' }] },\n      returns: { $array: { id: 'string', myNumber: 'number' } }\n    }\n  ]\n  it.skip('Generates single example without an error that matches snapshot', () => {\n    const result = server(singleExample())\n    expect(result).toMatchSnapshot()\n  })\n\n  it.skip('Generates crud example without an error that matches snapshot', () => {\n    const result = server(crudExample())\n    expect(result).toMatchSnapshot()\n  })\n\n  const crudElasticExample = (): OutputSuccess[] => [\n    {\n      method: 'GET',\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      search: 'textSearch',\n      preferredImplementation: { type: 'elasticsearch', index: 'test' },\n      arguments: {\n        search: ['string', '?'],\n        id: ['string', { $array: 'string' }, '?']\n      },\n      returns: { $array: { id: 'string', myNumber: 'number' } }\n    },\n    {\n      method: 'POST',\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      search: 'textSearch',\n      preferredImplementation: { type: 'elasticsearch', index: 'test' },\n      arguments: { id: ['string', '?'], myNumber: 'number' },\n      returns: { id: 'string', myNumber: 'number' }\n    },\n    {\n      method: 'PUT',\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      search: 'textSearch',\n      preferredImplementation: { type: 'elasticsearch', index: 'test' },\n      arguments: { id: 'string', myNumber: 'number' },\n      returns: { id: 'string', myNumber: 'number' }\n    },\n    {\n      method: 'PATCH',\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      search: 'textSearch',\n      preferredImplementation: { type: 'elasticsearch', index: 'test' },\n      arguments: { id: 'string', myNumber: ['number', '?'] },\n      returns: { id: 'string', myNumber: 'number' }\n    },\n    {\n      method: 'DELETE',\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      search: 'textSearch',\n      preferredImplementation: { type: 'elasticsearch', index: 'test' },\n      arguments: { id: ['string', { $array: 'string' }] },\n      returns: { $array: { id: 'string', myNumber: 'number' } }\n    }\n  ]\n\n  it.skip('generates elasticsearch implementation', () => {\n    const result = server(crudElasticExample())\n    expect(result).toMatchSnapshot()\n  })\n\n  const singleElasticExample = (): OutputSuccess[] => [\n    {\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      method: 'GET',\n      preferredImplementation: { type: 'elasticsearch', index: 'test' },\n      arguments: {\n        myNumber: 'number'\n      },\n      returns: {}\n    }\n  ]\n  it.skip('generates simple elasticsearch implementation, search defaults to idOnly get', () => {\n    const result = server(singleElasticExample())\n    expect(result).toMatchSnapshot()\n  })\n\n  it('full search is not implemented', () => {\n    const data = singleElasticExample()\n    data[0].search = 'full'\n    expect(() => server(data)).toThrow('Parametric get not implemented yet')\n  })\n\n  it('custom search is not implemented', () => {\n    const data = singleElasticExample()\n    data[0].search = { littleKitty: 'string' }\n    expect(() => server(data)).toThrow('Unsupported automatic elasticsearch methods: {\"littleKitty\":\"string\"}')\n  })\n})\n"]}