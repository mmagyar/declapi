{"version":3,"file":"client.spec.js","sourceRoot":"","sources":["../../src/generate/client.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import client from './client.js'\nimport { OutputSuccess } from '../transform/types.js'\ndescribe('Generate typing and fetch function for client', () => {\n  const singleExample = (): OutputSuccess[] => [\n    {\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      method: 'GET',\n      arguments: { myNumber: 'number' },\n      returns: {}\n    }\n  ]\n\n  const crudExample = (): OutputSuccess[] => [\n    {\n      method: 'GET',\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      arguments: { search: ['string', '?'], id: ['string', { $array: 'string' }, '?'] },\n      returns: { $array: { id: 'string', myNumber: 'number' } }\n    },\n    {\n      method: 'POST',\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      arguments: { id: ['string', '?'], myNumber: 'number' },\n      returns: { id: 'string', myNumber: 'number' }\n    },\n    {\n      method: 'PUT',\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      arguments: { id: 'string', myNumber: 'number' },\n      returns: { id: 'string', myNumber: 'number' }\n    },\n    {\n      method: 'PATCH',\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      arguments: { id: 'string', myNumber: ['number', '?'] },\n      returns: { id: 'string', myNumber: 'number' }\n    },\n    {\n      method: 'DELETE',\n      name: 'test',\n      authentication: false,\n      manageFields: {},\n      arguments: { id: ['string', { $array: 'string' }] },\n      returns: { $array: { id: 'string', myNumber: 'number' } }\n    }\n  ]\n\n  it.skip('Generates single example without an error that matches snapshot', () => {\n    const result = client(singleExample())\n    expect(result).toMatchSnapshot()\n  })\n\n  it.skip('Generates crud example without an error that matches snapshot', () => {\n    const result = client(crudExample())\n    expect(result).toMatchSnapshot()\n  })\n\n  it.skip('Can set the import path for getToken function', () => {\n    const result = client(singleExample(), '../myCustomTokenPath')\n    expect(result).toMatchSnapshot()\n  })\n})\n"]}