{"version":3,"file":"kv.js","sourceRoot":"","sources":["../../src/generate/kv.ts"],"names":[],"mappings":";;;AAUa,QAAA,SAAS,GAAG,CAAC,MAAgB,EAAE,KAAkB,EAAS,EAAE;IACvE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,MAAM,CAAA;IACjC,QAAQ,KAAK,CAAC,MAAM,EAAE;QACpB,KAAK,KAAK,CAAC,CAAC;YACV,IAAI,KAAK,CAAC,MAAM,KAAK,YAAY,EAAE;gBACjC,OAAO,sCAAsC,OAAO,OAAO,KAAK,8DAA8D,CAAA;aAC/H;iBAAM,IAAI,KAAK,CAAC,MAAM,KAAK,QAAQ,EAAE;gBACpC,OAAO,sCAAsC,OAAO,OAAO,KAAK,uCAAuC,CAAA;aACxG;iBAAM,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE;gBAClC,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAA;aACtD;YACD,MAAM,IAAI,KAAK,CAAC,4CAA4C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;SAC5F;QACD,KAAK,MAAM,CAAC,CAAC,OAAO,uCAAuC,OAAO,OAAO,KAAK,2BAA2B,CAAA;QACzG,KAAK,OAAO,CAAC,CAAC,OAAO,wCAAwC,OAAO,OAAO,KAAK,qCAAqC,CAAA;QACrH,KAAK,KAAK,CAAC,CAAC,OAAO,sCAAsC,OAAO,OAAO,KAAK,qCAAqC,CAAA;QACjH,KAAK,QAAQ,CAAC,CAAC,OAAO,sCAAsC,OAAO,OAAO,KAAK,8BAA8B,CAAA;KAC9G;AACH,CAAC,CAAA;AAED,kBAAe,iBAAS,CAAA","sourcesContent":["import { KeyValue } from '../DataDriverTypes.js'\nimport { SearchTypes, HttpMethods } from 'declarapi-runtime'\nexport type KVInputGet = {\n  method: 'GET',\n  search: SearchTypes\n}\nexport type KVInputBase = { method: HttpMethods, search? :SearchTypes}\nexport type KVInputType = KVInputBase & (KVInputGet | {\n  method: 'POST' | 'PUT' | 'PATCH' | 'DELETE',\n})\nexport const kvCodeGen = (driver: KeyValue, input: KVInputType):string => {\n  const { index, backend } = driver\n  switch (input.method) {\n    case 'GET': {\n      if (input.search === 'textSearch') {\n        return `(input, auth, contract) => kv.get(\"${backend}\", \"${index}\", contract, auth, input && input.id, input && input.search)`\n      } else if (input.search === 'idOnly') {\n        return `(input, auth, contract) => kv.get(\"${backend}\", \"${index}\", contract, auth, input && input.id)`\n      } else if (input.search === 'full') {\n        throw new Error('Parametric get not implemented yet')\n      }\n      throw new Error(`Unsupported automatic key-value methods: ${JSON.stringify(input.search)}`)\n    }\n    case 'POST': return `(input, auth, contract) => kv.post(\"${backend}\", \"${index}\", contract, auth, input)`\n    case 'PATCH': return `(input, auth, contract) => kv.patch(\"${backend}\", \"${index}\", contract, auth, input, input.id)`\n    case 'PUT': return `(input, auth, contract) => kv.put(\"${backend}\", \"${index}\", contract, auth, input, input.id)`\n    case 'DELETE': return `(input, auth, contract) => kv.del(\"${backend}\", \"${index}\", contract, auth, input.id)`\n  }\n}\n\nexport default kvCodeGen\n"]}