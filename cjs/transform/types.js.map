{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/transform/types.ts"],"names":[],"mappings":"","sourcesContent":["import Ajv from 'ajv'\nimport { ObjectType } from 'yaschva'\nimport { Elastic, KeyValue } from '../DataDriverTypes.js'\nimport { HttpMethods, SearchTypes } from 'declarapi-runtime'\n\nexport type AuthType = (string | {createdBy: boolean})[] | boolean\nexport type ManageableFields ={ createdBy?: boolean }\n\nexport type Contract = {\n  name: string;\n  type?: HttpMethods;\n  authentication: AuthType;\n  manageFields: ManageableFields;\n  arguments: ObjectType;\n  returns: ObjectType;\n  description?: string;\n};\nexport type CrudAuthAll = {\n  get: AuthType;\n  put: AuthType;\n  post: string[] | boolean;\n  delete: AuthType;\n};\n\nexport type CrudAuthSome = {\n  get: AuthType;\n  modify: AuthType;\n  delete?: AuthType;\n};\n\nexport type CrudContract = {\n  name: string;\n  methods?: { get?:boolean, post?:boolean, put?: boolean, patch?:boolean, delete?:boolean},\n  authentication: AuthType | CrudAuthAll | CrudAuthSome;\n  manageFields?:ManageableFields;\n  dataType: ObjectType;\n  search?: SearchTypes;\n  description?: string;\n  preferredImplementation?: {type: 'elasticsearch'; index: string};\n};\n\nexport type OutputSuccess = {\n  name: string;\n  authentication: AuthType;\n  manageFields: ManageableFields;\n  method: HttpMethods;\n  arguments: ObjectType;\n  returns: ObjectType;\n  preferredImplementation?: Elastic | KeyValue;\n  search?: SearchTypes;\n};\n\nexport type Output =\n  | {type: 'result'; key: string; results: OutputSuccess[]; errors?: undefined;}\n  | {type: 'error'; key?: undefined; errors: (Ajv.ErrorObject | string)[] | string; results?: undefined;};\n"]}