{"version":3,"file":"jsonSchema.js","sourceRoot":"","sources":["../../src/transform/jsonSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,8CAAsC;AACtC,wCAAqC;AACxB,QAAA,iBAAiB,GAAG,GAAG,EAAE;IACpC,OAAO,IAAI,aAAG,CAAC;QACb,UAAU,EAAE,CAAO,GAAQ,EAAE,EAAE,kDAAC,OAAA,kBAAQ,CAAC,GAAG,CAAC,CAAA,GAAA;KAC9C,CAAC,CAAA;AACJ,CAAC,CAAA;AAKY,QAAA,iBAAiB,GAAG,CAAC,KAAoB,EAAiC,EAAE,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,CAAA;AAC5G,QAAA,QAAQ,GAAG,CAAO,IAAY,EAAE,IAAQ,EAC5B,EAAE;IACzB,MAAM,SAAS,GAAG,MAAM,yBAAiB,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA;IAC9D,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAA;IAE9B,MAAM,MAAM,GAA6B,SAAS,CAAC,MAAM,IAAI,EAAE,CAAA;IAC/D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;IAC1C,IAAI,CAAC,MAAM;QAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,CAAA;IAC7C,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,CAAA;AAC5B,CAAC,CAAA,CAAA","sourcesContent":["import Ajv, { ErrorObject } from 'ajv'\nimport { loadJSON } from '../util.js'\nexport const jsonValidatorInit = () => {\n  return new Ajv({\n    loadSchema: async (uri: any) => loadJSON(uri)\n  })\n}\n\nexport type jsonValidationSuccess = {type:'success', errors? : (ErrorObject | string)[]};\nexport type jsonValidationError = {type:'error', errors : (ErrorObject | string)[]};\nexport type validateResult = jsonValidationSuccess | jsonValidationError;\nexport const isValidationError = (input:validateResult) : input is jsonValidationError => input && input.type === 'error'\nexport const validate = async (json: Object, data:any):\n Promise<validateResult> => {\n  const validator = await jsonValidatorInit().compileAsync(json)\n  const result = validator(data)\n\n  const errors: (ErrorObject | string)[] = validator.errors || []\n  errors.push(JSON.stringify(json, null, 2))\n  if (!result) return { type: 'error', errors }\n  return { type: 'success' }\n}\n"]}